{"version":3,"sources":["images/linkedin.svg","images/github.svg","images/headshot.jpg","images/dfs-optimizer-example.png","components/Navbar/Navbar.tsx","constants.ts","components/Links/Links.tsx","components/Home/Home.tsx","components/About/About.tsx","components/Resume/Resume.tsx","components/Projects/Projects.tsx","ScrollToTop.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","props","useState","initialState","classNames","Home","About","Resume","Projects","className","to","id","href","linkedIn","require","github","Links","target","rel","src","alt","headshot","title","scrolling","dfsOptimizerExample","ScrollToTop","prevProps","this","location","window","scrollTo","children","Component","withRouter","App","path","render","exact","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8e1af696.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/linkedin.e6a96407.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.0c8a8728.svg\";","module.exports = __webpack_public_path__ + \"static/media/headshot.21f41416.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dfs-optimizer-example.0c1be3d1.png\";","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navbar.css';\nimport {RESUME_DOWNLOAD_LINK} from \"../../constants\";\n\nexport const Navbar = (props: { initialState: string }) => {\n    const [selectedButton] = useState(props.initialState);\n\n    const classNames: any = {\n        Home: 'Unselected',\n        About: 'Unselected',\n        Resume: 'Unselected',\n        Projects: 'Unselected'\n    };\n\n    classNames[selectedButton] = 'Selected';\n\n    return (\n        <div className=\"Navbar\">\n            <Link className={classNames.Home} to=\"/\">Home</Link>\n            <Link className={classNames.About} to=\"/about\">About Me</Link>\n            <div className=\"Resume\">\n                <Link className={classNames.Resume} to=\"/resume\">Resume</Link>\n                <a id={'download-pdf'} className=\"Resume-dropdown\" href={RESUME_DOWNLOAD_LINK}>Download PDF</a>\n            </div>\n            <Link className={classNames.Projects} to=\"/projects\">Projects</Link>\n        </div>\n    );\n};\n","export const GOOGLE_DOCS_EMBED_LINK_FOR_RESUME = \"https://docs.google.com/document/d/e/2PACX-1vR7KuXM96JBgn0dtDI8nA8bhCIszgntZblap9226e_sNHoUc-o-Yr1I7jRk3bs6k_LPOX3hm0597h0Q/pub?embedded=true\";\nexport const CLEAN_CODE_LINK = \"https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882\";\nexport const PLURALSIGHT_LINK = \"https://www.pluralsight.com/\";\nexport const LINKED_IN_LINK = \"https://www.linkedin.com/in/dan-adajian-aa8aaa72/\";\nexport const GITHUB_LINK = \"https://github.com/danadajian/\";\nexport const DFS_OPTIMIZER_SITE = \"https://dfsoptimizer.app\";\nexport const KNAPSACK_PROBLEM_LINK = \"https://en.wikipedia.org/wiki/Knapsack_problem\";\nexport const RESUME_DOWNLOAD_LINK = \"https://docs.google.com/document/d/1q8SOfGxmeTZ0_z8y1ihKnDfAsZnVEjVDQfFUUw3MBzQ/export?format=pdf\";\n","import React from 'react';\nimport './Links.css';\nimport {GITHUB_LINK, LINKED_IN_LINK} from \"../../constants\";\n\nconst linkedIn = require('../../images/linkedin.svg');\nconst github = require('../../images/github.svg');\n\nexport const Links = () => {\n    return (\n        <div className=\"Links\">\n            <a href={LINKED_IN_LINK} target={\"_blank\"} rel={\"noopener noreferrer\"}>\n                <img src={linkedIn} alt={'LinkedIn'}/>\n            </a>\n            <a href={GITHUB_LINK} target={\"_blank\"} rel={\"noopener noreferrer\"}>\n                <img src={github} alt={'GitHub'}/>\n            </a>\n        </div>\n    );\n};\n","import React from 'react';\nimport '../../App.css';\nimport './Home.css';\nimport {Navbar} from '../Navbar/Navbar';\nimport {Links} from \"../Links/Links\";\n\nexport const Home = () => {\n    return (\n        <div className=\"Home\">\n            <div className=\"Overlay\">\n                <Navbar initialState={'Home'}/>\n                <h1>Dan Adajian</h1>\n                <p>\n                    I'm a software developer from Chicago, IL.\n                </p>\n                <p>\n                    Welcome to my site!\n                </p>\n                <Links/>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport '../../App.css';\nimport './About.css';\nimport {Navbar} from '../Navbar/Navbar';\nimport {CLEAN_CODE_LINK, PLURALSIGHT_LINK} from \"../../constants\";\nimport {Links} from \"../Links/Links\";\n\nconst headshot = require('../../images/headshot.jpg');\n\nexport const About = () => {\n    return (\n        <div>\n            <div className=\"Header\">\n                <Navbar initialState={'About'}/>\n            </div>\n            <div className=\"Container\">\n                <div className=\"About\">\n                    <section>\n                        <body>\n                        <img src={headshot} alt='Headshot'/>\n                        <p>\n                            I am a self-taught programmer who loves automating tasks and learning new\n                            technologies. As a strong advocate of test-driven development and\n                            pair-programming, I strive to write software guided by the principles of <a\n                            href={CLEAN_CODE_LINK} target={\"_blank\"} rel={\"noopener noreferrer\"}>clean code</a>.\n                        </p>\n                        </body>\n                    </section>\n                    <section>\n                        <body>\n                        <h3>Professional Experience</h3>\n                        <ul>\n                            <li>\n                                Data pipeline architecture using the AWS serverless application model\n                            </li>\n                            <li>\n                                Leveraging AWS Lambda and Batch to productionalize machine learning models\n                            </li>\n                            <li>\n                                Full-stack .NET web application development using MVC framework\n                            </li>\n                        </ul>\n                        <h3>Coursework</h3>\n                        <ul>\n                            <li>\n                                Watched over 30 hours of course\n                                content on <a href={PLURALSIGHT_LINK} target={\"_blank\"}\n                                              rel={\"noopener noreferrer\"}>Pluralsight</a> spanning the topics of Java\n                                fundamentals, test-driven development, Java testing frameworks,\n                                object-oriented programming, and AWS frameworks\n                            </li>\n                            <li>\n                                Scored in the 88th percentile on Pluralsight's Java Fundamentals assessment.\n                            </li>\n                        </ul>\n                        </body>\n                    </section>\n                    <section>\n                        <body>\n                        <h3>Education</h3>\n                        <ul>\n                            <li>\n                                Graduated from Northwestern University with a Bachelor's Degree in Math and Economics.\n                            </li>\n                        </ul>\n                        </body>\n                    </section>\n                    <section>\n                        <body>\n                        <h3>Interests</h3>\n                        <ul>\n                            <li>\n                                I play golf when it's over 40 degrees out, and paddle tennis otherwise.\n                            </li>\n                            <li>\n                                I enjoy watching football, playing the piano, and building software!\n                            </li>\n                        </ul>\n                        </body>\n                    </section>\n                </div>\n            </div>\n            <Links/>\n        </div>\n    );\n};\n","import React from 'react';\nimport './Resume.css';\nimport {GOOGLE_DOCS_EMBED_LINK_FOR_RESUME} from \"../../constants\";\nimport {Navbar} from '../Navbar/Navbar';\nimport {Links} from \"../Links/Links\";\n\nexport const Resume = () => {\n    return (\n        <div>\n            <div className=\"Header\">\n                <Navbar initialState={'Resume'}/>\n            </div>\n            <div className=\"Container\">\n                <body className=\"Resume\">\n                <iframe title={'Resume'} src={GOOGLE_DOCS_EMBED_LINK_FOR_RESUME} scrolling=\"no\"/>\n                </body>\n            </div>\n            <Links/>\n        </div>\n    );\n};\n","import React from 'react';\nimport './Projects.css';\nimport {Navbar} from '../Navbar/Navbar';\nimport {Links} from \"../Links/Links\";\nimport {DFS_OPTIMIZER_SITE, GITHUB_LINK, KNAPSACK_PROBLEM_LINK} from \"../../constants\";\n\nconst dfsOptimizerExample = require('../../images/dfs-optimizer-example.png');\n\nexport const Projects = () => {\n    return (\n        <div>\n            <div className=\"Header\">\n                <Navbar initialState={'Projects'}/>\n            </div>\n            <div className=\"Container\">\n                <div className=\"Projects\">\n                    <section>\n                        <body>\n                        <h1>Daily Fantasy Sports Lineup Optimizer</h1>\n                        <a href={DFS_OPTIMIZER_SITE} target={\"_blank\"}\n                           rel={\"noopener noreferrer\"}>https://dfsoptimizer.app</a>\n                        <h3>Overview</h3>\n                        <p>\n                            My Daily Fantasy Sports (DFS) lineup optimizer aims to generate a lineup of players such\n                            that the lineup's total projected points are maximized, given the constraint that the\n                            lineup's total salary is within the salary cap. Each player has a position, a projection,\n                            and a salary, and a lineup must contain a certain number of each position. The optimization\n                            problem presented here is a type of <a href={KNAPSACK_PROBLEM_LINK}>knapsack problem</a>,\n                            which involves picking items with weights and values optimally to fit inside a knapsack.\n                        </p>\n                        <img src={dfsOptimizerExample} alt={'DFS Optimizer Example'}/>\n                        <h3>My Solution</h3>\n                        <p>\n                            The method I developed uses what I call \"selective brute force\", which reduces the problem\n                            efficiently to make checking all possibilities feasible. First, players are grouped by\n                            position and sorted by their salary-to-projection ratios. Then, players are removed from\n                            each position pool until the maximum number of lineup combinations is under a specified\n                            fixed threshold. Finally, a recursive algorithm efficiently iterates over possible lineups\n                            one by one, ensuring each new lineup it checks has the potential to be better (i.e. has a\n                            higher projected point total).\n                        </p>\n                        <p>\n                            The app currently supports Fanduel and Draftkings contests for the big four\n                            (MLB, NFL, NBA, NHL).\n                        </p>\n                        </body>\n                    </section>\n                    <section>\n                        <body>\n                        <h3>More project overviews coming soon! In the meantime, check out my <a\n                            href={GITHUB_LINK} target={\"_blank\"}\n                            rel={\"noopener noreferrer\"}>GitHub</a>.\n                        </h3>\n                        </body>\n                    </section>\n                </div>\n            </div>\n            <Links/>\n        </div>\n    );\n};\n","import { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ScrollToTop extends Component {\n    componentDidUpdate(prevProps: any) {\n        const props: any = this.props;\n        if (props.location !== prevProps.location) {\n            window.scrollTo(0, 0);\n        }\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\n// @ts-ignore\nexport default withRouter(ScrollToTop)","import React from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport {Home} from \"./components/Home/Home\";\nimport {About} from \"./components/About/About\";\nimport {Resume} from \"./components/Resume/Resume\";\nimport {Projects} from \"./components/Projects/Projects\";\nimport ScrollToTop from \"./ScrollToTop\";\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <ScrollToTop>\n                <Switch>\n                    <Route path=\"/\" render={() => <Home/>} exact/>\n                    <Route path=\"/about\" render={() => <About/>}/>\n                    <Route path=\"/resume\" render={() => <Resume/>}/>\n                    <Route path=\"/projects\" render={() => <Projects/>}/>\n                </Switch>\n            </ScrollToTop>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}