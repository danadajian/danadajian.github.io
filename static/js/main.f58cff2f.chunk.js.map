{"version":3,"sources":["images/chicago.jpg","images/headshot.jpg","components/Navbar/Navbar.tsx","components/Home/Home.tsx","components/About/About.tsx","constants.ts","components/Resume/Resume.tsx","components/Projects/Projects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Navbar","props","selectedButton","changeSelectedButton","className","onClick","to","chicagoSkyline","require","Home","src","alt","headshot","About","style","width","height","href","Resume","title","Projects","App","setState","state","this","path","render","exact","Component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f58cff2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chicago.cef0c443.jpg\";","module.exports = __webpack_public_path__ + \"static/media/headshot.21f41416.jpg\";","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './Navbar.css';\n\nexport const Navbar = (props: {selectedButton: string, changeSelectedButton: any}) => {\n    const {selectedButton, changeSelectedButton} = props;\n    return (\n        <div className=\"Navbar\">\n            <Link onClick={() => changeSelectedButton('home')}\n                  className={(selectedButton === 'home') ? \"Selected\" : \"Unselected\"} to=\"/\">Home</Link>\n            <Link onClick={() => changeSelectedButton('about')}\n                  className={(selectedButton === 'about') ? \"Selected\" : \"Unselected\"} to=\"/about\">About Me</Link>\n            <Link onClick={() => changeSelectedButton('resume')}\n                  className={(selectedButton === 'resume') ? \"Selected\" : \"Unselected\"} to=\"/resume\">Resume</Link>\n            <Link onClick={() => changeSelectedButton('projects')}\n                  className={(selectedButton === 'projects') ? \"Selected\" : \"Unselected\"} to=\"/projects\">Projects</Link>\n        </div>\n    );\n};\n","import React from 'react';\nimport '../../App.css';\nimport './Home.css';\nimport {Navbar} from '../Navbar/Navbar';\n\nconst chicagoSkyline = require('../../images/chicago.jpg');\n\nexport const Home = (props: {selectedButton: string, changeSelectedButton: any}) => {\n    const {selectedButton, changeSelectedButton} = props;\n    return (\n        <div className=\"Home\">\n            <header className=\"Overlay\">\n                <Navbar selectedButton={selectedButton} changeSelectedButton={changeSelectedButton}/>\n                <h1>Dan Adajian</h1>\n                <p>\n                    Welcome to my site! I'm a software developer from Chicago, IL.\n                </p>\n            </header>\n            <img src={chicagoSkyline} alt='chicago'/>\n        </div>\n    );\n};\n","import React from 'react';\nimport '../../App.css';\nimport './About.css';\nimport {Navbar} from '../Navbar/Navbar';\nimport {CLEAN_CODE_LINK, PLURALSIGHT_LINK} from \"../../constants\";\n\nconst headshot = require('../../images/headshot.jpg');\n\nexport const About = (props: { selectedButton: string, changeSelectedButton: any }) => {\n    const {selectedButton, changeSelectedButton} = props;\n    return (\n        <div>\n            <div className=\"Header\">\n                <Navbar selectedButton={selectedButton} changeSelectedButton={changeSelectedButton}/>\n            </div>\n            <div className=\"Container\">\n                <body className=\"About\">\n                <img src={headshot} style={{width: '400px', height: '400px'}} alt='headshot'/>\n                <section>\n                    <h1>\n                        Development Skills\n                    </h1>\n                    <p>\n                        I am self-taught and have become adept at learning new technologies quickly.\n                        I'm a strong advocate of test-driven development and pair-programming,\n                        and I write software exclusively in <a href={CLEAN_CODE_LINK}>clean code</a>.\n                    </p>\n                    <h3>Professional</h3>\n                    <p>\n                        I have hands-on experience using Node.js and the AWS serverless application model to\n                        productionalize machine learning models. I also have experience refactoring and maintaining\n                        React.js and Python code.\n                    </p>\n                    <h3>Coursework</h3>\n                    <p>\n                        I have watched over 30 hours of course\n                        content on <a href={PLURALSIGHT_LINK}>Pluralsight</a> spanning the topics of Java fundamentals,\n                        test-driven development, Java testing frameworks, object-oriented programming, and AWS\n                        frameworks.\n                        I subsequently scored in the 88th percentile on Pluralsight's Java Fundamentals assessment.\n                    </p>\n                </section>\n                <section>\n                    <h1>\n                        Education\n                    </h1>\n                    <p>\n                        I graduated from Northwestern University with a Bachelor's Degree in Math and Economics.\n                    </p>\n                </section>\n                <section>\n                    <h1>\n                        Interests\n                    </h1>\n                    <p>\n                        I play golf when it's over 40 degrees out, and paddle tennis otherwise. I love the feeling I get\n                        when I automate a mundane task. I enjoy watching football, playing the piano, and producing\n                        music.\n                    </p>\n                </section>\n                </body>\n            </div>\n        </div>\n    );\n};\n","export const GOOGLE_DOCS_EMBED_LINK_FOR_RESUME = \"https://docs.google.com/document/d/e/2PACX-1vR7KuXM96JBgn0dtDI8nA8bhCIszgntZblap9226e_sNHoUc-o-Yr1I7jRk3bs6k_LPOX3hm0597h0Q/pub?embedded=true\";\nexport const CLEAN_CODE_LINK = \"https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882\";\nexport const PLURALSIGHT_LINK = \"https://www.pluralsight.com/\";","import React from 'react';\nimport './Resume.css';\nimport {GOOGLE_DOCS_EMBED_LINK_FOR_RESUME} from \"../../constants\";\nimport {Navbar} from '../Navbar/Navbar';\n\nexport const Resume = (props: { selectedButton: string, changeSelectedButton: any }) => {\n    const {selectedButton, changeSelectedButton} = props;\n    return (\n        <div>\n            <div className=\"Header\">\n                <Navbar selectedButton={selectedButton} changeSelectedButton={changeSelectedButton}/>\n            </div>\n            <div className=\"Container\">\n                <body className=\"Resume\">\n                <iframe className=\"Resume-object\" title={'Resume'} src={GOOGLE_DOCS_EMBED_LINK_FOR_RESUME}/>\n                </body>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './Projects.css';\nimport {Navbar} from '../Navbar/Navbar';\n\nexport const Projects = (props: { selectedButton: string, changeSelectedButton: any }) => {\n    const {selectedButton, changeSelectedButton} = props;\n    return (\n        <div>\n            <div className=\"Header\">\n                <Navbar selectedButton={selectedButton} changeSelectedButton={changeSelectedButton}/>\n            </div>\n            <div className=\"Container\">\n                <body className=\"Projects\">\n                <p>\n                    Coming soon!\n                </p>\n                </body>\n            </div>\n        </div>\n    );\n};\n","import React, {Component} from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport {Home} from \"./components/Home/Home\";\nimport {About} from \"./components/About/About\";\nimport {Resume} from \"./components/Resume/Resume\";\nimport {Projects} from \"./components/Projects/Projects\";\n\nclass App extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {selectedButton: 'home'}\n    }\n\n    changeSelectedButton = (selectedButton: string) => {\n        this.setState({selectedButton})\n    };\n\n    render() {\n        const {selectedButton}: any = this.state;\n        return (\n            <main>\n                <Switch>\n                    <Route path=\"/\" render={() => <Home selectedButton={selectedButton}\n                                                        changeSelectedButton={this.changeSelectedButton}/>} exact/>\n                    <Route path=\"/about\" render={() => <About selectedButton={selectedButton}\n                                                              changeSelectedButton={this.changeSelectedButton}/>}/>\n                    <Route path=\"/resume\" render={() => <Resume selectedButton={selectedButton}\n                                                                changeSelectedButton={this.changeSelectedButton}/>}/>\n                    <Route path=\"/projects\" render={() => <Projects selectedButton={selectedButton}\n                                                                    changeSelectedButton={this.changeSelectedButton}/>}/>\n                </Switch>\n            </main>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}